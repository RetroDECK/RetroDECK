name: Stable release builds

on:
  push:
    branches: [ feat/godot-configurator ]
  
  workflow_dispatch:
   

env:
  GODOT_VERSION: 4.2.2
  EXPORT_NAME: RetroDECKGodot
  TAG: v0.005
  #BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}

jobs:
  export-linux:
    name: Linux Export üêß
    runs-on: ubuntu-latest
    container:
      image: docker://barichello/godot-ci:4.2.2
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup üíª
        run: |
          mkdir -v -p build/${EXPORT_NAME}-Linux-64bit  ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Import resources once üì¶
        working-directory: tools/configurator
        continue-on-error: true
        run: godot --headless -v --import
      - name: Linux Build üîß
        working-directory: tools/configurator
        continue-on-error: true
        run: |
          godot --headless -v --export-release "linux" test.x86_64
          cp ./build/${EXPORT_NAME}-Linux-64bit/${EXPORT_NAME}.x86_64 ../

#      - name: Give execute permission ‚òëÔ∏è
 #       working-directory: tools/configurator
  #      run: |
         # chmod +x ./build/${EXPORT_NAME}-Linux-64bit/${EXPORT_NAME}.x86_64
    #  - name: Copy pixelorama_data folder üìÅ
    #    run: |
    #      rm ./pixelorama_data/.gdignore
    #      cp -R ./pixelorama_data ./build/${EXPORT_NAME}-Linux-64bit
      - name: Create tar.gz archive üóúÔ∏è
        working-directory: tools/configurator
        run: |
          tar zcvf ${EXPORT_NAME}-Linux-64bit.tar.gz test.x86_64
      - name: Upload Release Asset üöÄ
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./build/${{env.EXPORT_NAME}}-Linux-*.tar.gz
          tag: ${{env.TAG}}
          overwrite: true
          file_glob: true
