app-id: net.retrodeck.retrodeck
runtime: org.freedesktop.Platform
runtime-version: '24.08'
sdk: org.freedesktop.Sdk
base: org.electronjs.Electron2.BaseApp            # Needed for Steam ROM Manager
base-version: "24.08"
command: retrodeck.sh

add-extensions:
  org.freedesktop.Platform.ffmpeg-full:
    directory: lib/ffmpeg
    add-ld-path: .
    version: '24.08'
cleanup-commands:
  - mkdir -p ${FLATPAK_DEST}/lib/ffmpeg

finish-args:
  - --socket=wayland
  - --socket=x11
  - --socket=pulseaudio
  - --share=ipc
  - --share=network
  - --device=all
  - --filesystem=host
  - --filesystem=home/.var/app/com.valvesoftware.Steam
  - --allow=multiarch
  - --talk-name=org.freedesktop.ScreenSaver
  - --talk-name=org.freedesktop.PowerManagement.Inhibit
  - --talk-name=org.freedesktop.login1.Manager
  - --filesystem=xdg-run/app/com.discordapp.Discord:create
  - --filesystem=xdg-config/gtk-3.0:ro
  - --env=QT_QPA_PLATFORM=wayland;wayland-egl;xcb
  # Dolphin
  - --allow=bluetooth
  # It allows an SDL application to specify its window class, which can be useful for window managers and desktop environments to identify and group similar windows
  - --env=SDL_VIDEO_X11_WMCLASS=net.retrodeck.retrodeck
  - --env=SDL_VIDEO_WAYLAND_WMCLASS=net.retrodeck.retrodeck
  # XEMU - Fixes issues with openSUSE systems, QEMU_AUDIO_DRV is defined as "pa" causing xemu to not launch
  - --unset-env=QEMU_AUDIO_DRV
  # Steam ROM Manager
  - --filesystem=xdg-data/Steam:rw #Steam (flatpak)
  - --filesystem=~/.steam:rw # Steam (Non-flatpak)
  - --filesystem=~/.var/app/com.valvesoftware.Steam:rw # Steam (Flatpak)
  # PPSSPP, DOLPHIN
  - --filesystem=xdg-run/gamescope-0:ro
  # STEAM ROM MANAGER
  - --env=IN_FLATPAK=1

cleanup:
  # ES-DE
  - /include
  - /share/ffmpeg
  - /lib/cmake
  - /lib/pkgconfig
  - /include
  - /bin/glslangValidator
  - /bin/zip*
  - /bin/zstd*
  - /lib/pkg-config
  - /share/doc
  - /share/gtk-doc # Steam ROM Manager
  - /share/man
  - /src
  - '*.a'
  - '*.la'
  - /app/bin/libman.sh

modules:

  # This module is used to define the RetroDECK version
  # If the version is set as cooker it will automatically generate the version tag based on the date
  # else it will just put what is written, "v" is not needed
  # The version number is hardcoded in /app/retrodeck/version
  #
  # UPDATE STEPS FOR MAIN:
  # [ ] Update the net.retrodeck.retrodeck.metainfo.xml with the version number, date and notes

  - name: retrodeck-initialization
    buildsystem: simple
    build-commands:
      - |

        # VERSION INITIALIZATION
        source "automation_tools/version_extractor.sh"
        VERSION=$(fetch_actual_version)

        # Check out the current Git branch
        git checkout ${GITHUB_REF_NAME}

        # Create the retrodeck directory in the Flatpak destination
        mkdir -p ${FLATPAK_DEST}/retrodeck/

        # Write the version number to the retrodeck version file
        echo $VERSION >> ${FLATPAK_DEST}/retrodeck/version

        # Display the contents of the version file
        cat ${FLATPAK_DEST}/retrodeck/version

        # Print the version number to the console
        echo "Version is $VERSION"

        # Initializing RO retrodeck config folder
        mkdir -p ${FLATPAK_DEST}/retrodeck/graphics
        mkdir -p ${FLATPAK_DEST}/share/icons/hicolor/scalable/apps/
        mkdir -p ${FLATPAK_DEST}/retrodeck/components

    sources:
      - type: dir
        path: .

  - name: xmlstarlet
    config-opts:
      - --disable-static-libs
      - --with-libxml-libs-prefix=/usr/lib
      - --with-libxml-include-prefix=/usr/include/libxml2
    sources:
      - type: archive
        url: https://downloads.sourceforge.net/xmlstar/xmlstarlet-1.6.1.tar.gz
        sha256: 15d838c4f3375332fd95554619179b69e4ec91418a3a5296e7c631b7ed19e7ca
      - type: shell
        commands:
          - cp -p /usr/share/automake-*/config.{sub,guess} .
          - autoreconf -vfi
    post-install:
      - ln -s "xml" "${FLATPAK_DEST}/bin/xmlstarlet" ||:

  - name: rclone
    buildsystem: simple
    build-commands:
      - cp rclone ${FLATPAK_DEST}/bin/
    sources:
      - type: archive
        url: https://github.com/rclone/rclone/releases/download/v1.69.1/rclone-v1.69.1-linux-amd64.zip
        sha256: 231841f8d8029ae6cfca932b601b3b50d0e2c3c2cb9da3166293f1c3eae7d79c

  # Source: https://github.com/flathub/com.valvesoftware.Steam.Utility.steamtinkerlaunch/blob/129c9192f874405d21612d95f9749dc2bcaf8cea/modules/rsync.yml#L5
  - name: rsync
    no-autogen: true
    config-opts:
      - --prefix=${FLATPAK_DEST}
      - --with-included-popt
      - --with-included-zlib
      - --disable-debug
      - --disable-xxhash # Unable to meet dependency -- rsync refuses to see the required xxhash.h file
    sources:
      - type: archive
        url: https://download.samba.org/pub/rsync/src/rsync-3.2.7.tar.gz
        sha256: 4e7d9d3f6ed10878c58c5fb724a67dacf4b6aac7340b13e488fb2dc41346f2bb
        x-checker-data:
          type: anitya
          project-id: 4217
          stable-only: true
          url-template: https://download.samba.org/pub/rsync/src/rsync-$version.tar.gz

  - name: jq
    buildsystem: simple
    build-commands:
      - install -Dm755 jq-linux64 ${FLATPAK_DEST}/bin/jq
    sources:
      - type: file
        url: https://github.com/jqlang/jq/releases/download/jq-1.7.1/jq-linux64
        sha256: 5942c9b0934e510ee61eb3e30273f1b3fe2590df93933a93d7c58b81d19c8ff5

  - name: yq
    buildsystem: simple
    build-commands:
      - install -Dm755 yq_linux_amd64 ${FLATPAK_DEST}/bin/yq
    sources:
      - type: file
        url: https://github.com/mikefarah/yq/releases/download/v4.45.1/yq_linux_amd64
        sha256: 654d2943ca1d3be2024089eb4f270f4070f491a0610481d128509b2834870049

  # Steam ROM Manager - START
  # https://github.com/flathub/com.steamgriddb.steam-rom-manager

  - name: zypak
    sources:
      - type: git
        url: https://github.com/refi64/zypak
        tag: v2022.03
        commit: 8424c6bcf909ca2031ebc6537d324bb64772266e

  - name: steam-rom-manager
    buildsystem: simple
    build-commands:
      - install -D run.sh ${FLATPAK_DEST}/bin/steam-rom-manager
      - bsdtar -xf srm.deb data.tar.xz
      - tar xf data.tar.xz
      - mv "opt/Steam ROM Manager" "${FLATPAK_DEST}/srm"
      - rm -rf "usr/share/icons/hicolor/1024x1024"
      - cd usr; find share/icons/hicolor -type f -exec install -Dm644 "{}"
        "${FLATPAK_DEST}/{}" \;
      - rm -r srm.deb data.tar.xz usr opt
    sources:
      - type: script
        dest-filename: run.sh
        commands:
          - /app/bin/zypak-wrapper.sh /app/srm/steam-rom-manager "${@}"
      - type: file
        dest-filename: srm.deb
        url: https://github.com/SteamGridDB/steam-rom-manager/releases/download/v2.5.29/steam-rom-manager_2.5.29_amd64.deb
        sha256: a85369ad8b758551b74755ddb712c6bd72311693971065c9bcec1dcdec53f54a
        x-checker-data:
          type: json
          url: https://api.github.com/repos/SteamGridDB/steam-rom-manager/releases/latest
          url-query: >-
            .assets[] | select(.name=="steam-rom-manager_" + $version +
            "_amd64.deb") | .browser_download_url
          version-query: .tag_name | sub("^v"; "")

  # Steam ROM Manager - END

  - name: retrodeck-theme
    buildsystem: simple
    build-commands:
      - mkdir -p ${FLATPAK_DEST}/share/es-de/themes/retrodeck/
      - mv -f * ${FLATPAK_DEST}/share/es-de/themes/retrodeck/
    sources:
      - type: git
        url:  https://github.com/RetroDECK/RetroDECK-theme
        commit: 6c9565fc8335d9cd74a56ae8a2c4dafa8cf9c513

  - name: retrodeck
    buildsystem: simple
    build-commands:

      # This prevents appstream-compose to fail
      - | 
        if [ -d ${FLATPAK_DEST}/usr ]; then
          mv -n ${FLATPAK_DEST}/usr/** ${FLATPAK_DEST}/share
          rm -rf ${FLATPAK_DEST}/usr
        fi

      # Logo, res, move graphics directory away from default location so splash can be changed after build
      - cp -f res/splash.svg ${FLATPAK_DEST}/retrodeck/graphics/splash.svg
      - cp -f res/splash.svg ${FLATPAK_DEST}/retrodeck/graphics/splash-orig.svg
      - cp -rf res/extra_splashes/ ${FLATPAK_DEST}/retrodeck/graphics
      - cp -f res/icon.svg ${FLATPAK_DEST}/share/icons/hicolor/scalable/apps/net.retrodeck.retrodeck.svg
      - cp -f res/icon-configurator.svg ${FLATPAK_DEST}/share/icons/hicolor/scalable/apps/net.retrodeck.retrodeck.configurator.svg
      - mv -f -t ${FLATPAK_DEST}/retrodeck res/binding_icons
      - mv -f -t ${FLATPAK_DEST}/retrodeck res/steam_grid

      # RetroDECK core script
      - install -Dm755 retrodeck.sh ${FLATPAK_DEST}/bin/retrodeck.sh

      # Tools
      - mkdir -p ${FLATPAK_DEST}/tools
      - cp -r tools/*.sh ${FLATPAK_DEST}/tools
      - find ${FLATPAK_DEST}/tools -type f \( -name "*.sh" -o -name "*.py" \) -exec chmod +x {} \;

      # Function libraries
      - mkdir -p ${FLATPAK_DEST}/libexec
      - cp -r functions/** "${FLATPAK_DEST}/libexec/"

      # Desktop entries
      - install -Dm755 net.retrodeck.retrodeck.desktop ${FLATPAK_DEST}/share/applications/net.retrodeck.retrodeck.desktop
      - install -Dm755 net.retrodeck.retrodeck.Configurator.desktop ${FLATPAK_DEST}/share/applications/net.retrodeck.retrodeck.Configurator.desktop

      # Initializing default emulator configs
      - cp -r config ${FLATPAK_DEST}/retrodeck/config/

      # Creating symlinks for a prettier access
      - ln -s ${FLATPAK_DEST}/bin/retrodeck.sh ${FLATPAK_DEST}/bin/retrodeck
      - ln -s ${FLATPAK_DEST}/tools/configurator.sh ${FLATPAK_DEST}/bin/configurator

      # Install MIME Type
      - install -Dm 644 config/retrodeck/net.retrodeck.retrodeck.mime.xml /app/share/mime/packages/net.retrodeck.retrodeck.mime.xml

      # Installing metainfo
      - install -Dm 644 net.retrodeck.retrodeck.metainfo.xml ${FLATPAK_DEST}/share/metainfo/net.retrodeck.retrodeck.metainfo.xml

      # Removing the retrodeck_function_wrapper.sh in non-cooker versions (aka main)
      - |
        if ! grep -q "cooker" "${FLATPAK_DEST}/retrodeck/version"; then
          rm -f "${FLATPAK_DEST}/tools/retrodeck_function_wrapper.sh"
        fi

    sources:
      - type: dir
        path: .
