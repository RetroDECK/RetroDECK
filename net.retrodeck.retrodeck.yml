app-id: net.retrodeck.retrodeck
runtime: org.kde.Platform
runtime-version: 5.15-21.08
#runtime-version: 6.3                        # bumped because of pcsx2-qt
sdk: org.kde.Sdk
sdk-extensions:
  - org.freedesktop.Sdk.Extension.llvm14    # Needed for rpcs3
  #- org.freedesktop.Sdk.Extension.dotnet6   # Needed for Ryujinx - Removed, check if it's not breaking something else
base: io.qt.qtwebengine.BaseApp             # Needed for Yuzu
base-version: 5.15-21.08                    # Needed for Yuzu
command: retrodeck.sh

finish-args:
  - --socket=x11
  #- --socket=wayland
  - --socket=pulseaudio
  - --share=ipc
  - --share=network
  - --device=all
  - --filesystem=home # Needed to be able to relocate / remove / create symlink at ~/retrodeck
  - --filesystem=/run/media
  - --filesystem=/media
  - --allow=multiarch
  - --talk-name=org.freedesktop.ScreenSaver
  - --talk-name=org.freedesktop.PowerManagement.Inhibit
  - --talk-name=org.freedesktop.login1.Manager
  - --filesystem=xdg-run/app/com.discordapp.Discord:create
  # Yuzu
  # - --filesystem=home:ro # This may break Yuzu, let's see
  # - --filesystem=/run/media:ro
  # Dolphin
  - --allow=bluetooth
  #- --env=QT_QPA_PLATFORM=xcb #not sure if this will break something
  # rpcs3
  #- --socket=fallback-x11

cleanup:
  # ES-DE
  - /include
  - /share/ffmpeg
  - /lib/cmake
  #- /lib/debug
  - /lib/pkgconfig
  # Yuzu
  - /include
  - /bin/glslangValidator
  - /bin/zip*
  - /bin/zstd*
  - /lib/pkg-config
  - /share/doc
  - /share/man
  - /src
  - '*.a'
  - '*.la'
cleanup-commands:
  # Yuzu
  - /app/cleanup-BaseApp.sh

modules:

  - rd-submodules/shared-modules/libusb/libusb.json

  # This module is used to define the RetroDECK version
  # If the version is set as cooker it will automatically generate the version tag based on the date
  # else it will just put what is written, "v" is not needed
  # The version number is hardcoded in /app/retrodeck/version
  #
  # UPDATE STEPS FOR MAIN:
  # [X] Update the VERSION variable
  # [X] Update the appdata.xml with the version number and notes
  # [X] change branch into main in version-initialization (first one)
  # [X] change branch into main in retrodeck module (last one)
  # [X] if header (before modules) was edited, edit it even in flathub.yml
  #
  - name: version-initialization
    buildsystem: simple
    build-commands:
      - |
        git checkout ${GITHUB_REF_NAME}
        mkdir -p ${FLATPAK_DEST}/retrodeck/
        VERSION="0.6.3b"
        if [[ $VERSION == *"cooker"* ]];
        then
          VERSION="$VERSION-[$(git rev-parse --short HEAD)]"
        fi
        echo $VERSION >> ${FLATPAK_DEST}/retrodeck/version
        cat ${FLATPAK_DEST}/retrodeck/version
    sources:
      - type: git
        url: https://github.com/XargonWan/RetroDECK.git
        branch: main

  - name: xmlstarlet
    config-opts:
      - --disable-static-libs
      - --with-libxml-libs-prefix=/usr/lib
      - --with-libxml-include-prefix=/usr/include/libxml2
    sources:
      - type: archive
        url: https://downloads.sourceforge.net/xmlstar/xmlstarlet-1.6.1.tar.gz
        sha256: 15d838c4f3375332fd95554619179b69e4ec91418a3a5296e7c631b7ed19e7ca
      - type: shell
        commands:
          - cp -p /usr/share/automake-*/config.{sub,guess} .
          - autoreconf -vfi
    post-install:
      - ln -s "xml" "${FLATPAK_DEST}/bin/xmlstarlet" ||:
    cleanup: ['*']

  # pcsx2-qt needs QT6, maybe others, here until every qt emulator will support qt6 (not yuzu atm)
  # from: https://github.com/flathub/org.profex_xrd.Profex

  # - name: qt6-core5compat
  #   buildsystem: cmake-ninja
  #   builddir: true
  #   sources:
  #     - type: archive
  #       url: https://download.qt.io/official_releases/qt/6.2/6.2.4/submodules/qt5compat-everywhere-src-6.2.4.tar.xz
  #       sha256: 5de2b9e25bf7de161fbb88ecdd468ed1788bc899392fc05ed80aa590ebb352fa
  #       x-checker-data:
  #         type: html
  #         url: https://download.qt.io/official_releases/qt/6.2/
  #         version-pattern: '>([\d\.-]*)/<'
  #         url-template: https://download.qt.io/official_releases/qt/6.2/$version/submodules/qt5compat-everywhere-src-$version.tar.xz
  #   post-install:
  #     - mkdir -p /app/lib/mkspecs
  #     - cp -R /app/mkspecs/* /app/lib/mkspecs/
  #     - ln -fsr ${FLATPAK_DEST}/lib/${FLATPAK_ARCH}-linux-gnu/libQt*.so* -t ${FLATPAK_DEST}/lib/
  #     - sed -i 's/\\([0-9]\\+\\.[0-9]\\+\\)\\.[0-9]\\+ ${_Qt6.*_FIND_VERSION_EXACT}/\\1/'
  #       ${FLATPAK_DEST}/lib/${FLATPAK_ARCH}-linux-gnu/cmake/Qt6*/Qt6*Config.cmake
  #     - sed -e 's@PATHS \"${CMAKE_CURRENT_LIST_DIR}/..\" NO_DEFAULT_PATH@PATHS \"${CMAKE_CURRENT_LIST_DIR}/..\"
  #       \"/usr/lib/${CMAKE_CXX_LIBRARY_ARCHITECTURE}/cmake/\" NO_DEFAULT_PATH@' -i
  #       ${FLATPAK_DEST}/lib/${FLATPAK_ARCH}-linux-gnu/cmake/Qt6*/Qt6*Config.cmake
  #     - sed -e 's@\\($$QT_MODULE_BIN_BASE\\)@\\1 '${FLATPAK_DEST}'/bin @' -i ${FLATPAK_DEST}/lib/mkspecs/modules/*.pri
  #     - sed -e 's@\\($$QT_MODULE_INCLUDE_BASE \\)@\\1'${FLATPAK_DEST}'/include @'
  #       -i ${FLATPAK_DEST}/lib/mkspecs/modules/*.pri
  #     - sed -e 's@$$QT_MODULE_INCLUDE_BASE/@'${FLATPAK_DEST}'/include/@g' -i ${FLATPAK_DEST}/lib/mkspecs/modules/*.pri
  #     - sed -e 's@$$QT_MODULE_LIB_BASE@'${FLATPAK_DEST}'/lib@g' -i ${FLATPAK_DEST}/lib/mkspecs/modules/*.pri
  #   cleanup:
  #     - /app/mkspecs

  # mesa repo got a double certificate issue and gnutils cannot handle that so GLU download fails,
  # this affects even the shared-modules's glu so I have to replace it temporarly
  # more info there: https://gitlab.com/gnutls/gnutls/-/issues/1335
  - name: glu
    buildsystem: meson
    cleanup:
      - /include
      - /lib/debug
      - /lib/pkgconfig
      - /lib/*.a
    sources:
      - type: archive
        url: https://ftp.osuosl.org/pub/blfs/conglomeration/glu/glu-9.0.2.tar.xz
        sha256: 6e7280ff585c6a1d9dfcdf2fca489251634b3377bfc33c29e4002466a38d02d4

  - name: libgudev
    buildsystem: meson
    config-opts:
      - -Dtests=disabled
      - -Dvapi=disabled
      - -Dintrospection=disabled
      - -Dgtk_doc=false
    cleanup:
      - /include
      - /etc
      - /libexec
      - /sbin
      - /lib/pkgconfig
      - /lib/systemd
      - /man
      - /share/aclocal
      - /share/doc
      - /share/gtk-doc
      - /share/man
      - /share/pkgconfig
      - '*.la'
      - '*.a'
    sources:
      - type: archive
        url: https://ftp.osuosl.org/pub/blfs/conglomeration/libgudev/libgudev-237.tar.xz
        sha256: 0d06b21170d20c93e4f0534dbb9b0a8b4f1119ffb00b4031aaeb5b9148b686aa

  - name: chdman-tool
    buildsystem: simple
    build-commands:
      - cmake -B . -G Ninja
      - cmake --build .
      - cp chdman /app/bin
    sources:
      - type: git
        url: https://github.com/CharlesThobe/chdman.git
        commit: f7cadf1720cbeba8a14f2685830ff424a0c7f6cd

  # ES-DE - START
  # https://gitlab.com/es-de/emulationstation-de

  - name: ffmpeg
    config-opts:
      - --disable-static
      - --disable-programs
      - --disable-doc
      - --enable-gpl
      - --enable-shared
      - --enable-libvorbis
      - --enable-libopus
      - --enable-libvpx
      - --enable-postproc
    sources:
      - type: git
        url: https://github.com/FFmpeg/FFmpeg.git
        tag: n5.1.1

  - name: freeimage
    no-autogen: true
    build-options:
      cxxflags: -std=c++14
    make-args:
      - DESTDIR=/app
    sources:
      - type: archive
        url: http://downloads.sourceforge.net/freeimage/FreeImage3180.zip
        sha256: f41379682f9ada94ea7b34fe86bf9ee00935a3147be41b6569c9605a53e438fd
      - type: shell
        commands:
          - sed -i 's|-o root -g root ||' ./Makefile.gnu
          - sed -i 's|/usr|/app|' ./Makefile.gnu

  - name: pugixml
    buildsystem: cmake-ninja
    config-opts:
      - -DBUILD_SHARED_LIBS=on .
    sources:
      - type: archive
        url: https://github.com/zeux/pugixml/releases/download/v1.11.4/pugixml-1.11.4.tar.gz
        sha256: 8ddf57b65fb860416979a3f0640c2ad45ddddbbafa82508ef0a0af3ce7061716

  # When updating this module remember to check those: https://gitlab.com/es-de/emulationstation-de/-/tree/v1.2.6/resources/systems/unix
  # But we don't include them 1:1 as RetroDECK got some specific configs in some cases
  - name: emulationstation-de
    buildsystem: cmake-ninja
    cleanup:
      - es-app
      - es-core
    sources:
      - type: git
        url: https://gitlab.com/es-de/emulationstation-de
        branch: f8d782f1f3b1fba8a119b793edd01f37e0258953
      - type: shell
        commands:
          - sed -i 's/QUIT EMULATIONSTATION/QUIT RETRODECK/g' es-app/src/guis/GuiMenu.cpp
          - sed -i 's#"EMULATIONSTATION-DE  V" + Utils::String::toUpper(PROGRAM_VERSION_STRING)#"RetroDECK
            v'$(cat ${FLATPAK_DEST}/retrodeck/version)', ES-DE  v" + Utils::String::toUpper(PROGRAM_VERSION_STRING)#g'
            es-app/src/guis/GuiMenu.cpp

  # ES-DE - END

  # ES-DE Themes - START

  - name: art-book-next-es-de
    buildsystem: simple
    build-commands:
      - mkdir -p ${FLATPAK_DEST}/share/emulationstation/themes/art-book-next-es-de/
      - mv -f * ${FLATPAK_DEST}/share/emulationstation/themes/art-book-next-es-de/
    sources:
      - type: git
        url:  https://github.com/anthonycaccese/art-book-next-es-de.git
        commit: a0dc0cccaa3f1475feb58e551fe732d982e161c0

  - name: alekfull-nx-es-de
    buildsystem: simple
    build-commands:
      - mkdir -p ${FLATPAK_DEST}/share/emulationstation/themes/alekfull-nx-es-de/
      - mv -f * ${FLATPAK_DEST}/share/emulationstation/themes/alekfull-nx-es-de/
    sources:
      - type: git
        url:  https://github.com/anthonycaccese/alekfull-nx-es-de.git
        commit: 5011e5dca75663ff18602f3af9d17e9e880880ef

  - name: retrofix-revisited-es-de
    buildsystem: simple
    build-commands:
      - mkdir -p ${FLATPAK_DEST}/share/emulationstation/themes/retrofix-revisited-es-de/
      - mv -f * ${FLATPAK_DEST}/share/emulationstation/themes/retrofix-revisited-es-de/
    sources:
      - type: git
        url:  https://github.com/anthonycaccese/retrofix-revisited-es-de.git
        commit: 23b80225078d2a3723039a8e94b6147c84065028

  - name: nso-menu-interpreted-es-de
    buildsystem: simple
    build-commands:
      - mkdir -p ${FLATPAK_DEST}/share/emulationstation/themes/nso-menu-interpreted-es-de/
      - mv -f * ${FLATPAK_DEST}/share/emulationstation/themes/nso-menu-interpreted-es-de/
    sources:
      - type: git
        url:  https://github.com/anthonycaccese/nso-menu-interpreted-es-de.git
        commit: f129c2d88e060a6c5d7643de5aeb02a0cc013de3

  # ES-DE Themes - END

  # External manifests start

  # RetroArch - START
  # https://github.com/flathub/org.libretro.RetroArch

  - name: retroarch
    config-opts:
      - '--enable-dbus'
    make-args:
      - GLOBAL_CONFIG_DIR=${FLATPAK_DEST}/etc
    sources:
      - type: git
        url: https://github.com/libretro/RetroArch.git
        commit: 938ab716bd290b0f469068500966a834b5782929
      - type: file
        path: rd-submodules/retroarch/retroarch.cfg
    post-install:
      - mkdir -p ${FLATPAK_DEST}/share/icons/hicolor/scalable/apps/
      - >-
        mv ${FLATPAK_DEST}/share/pixmaps/retroarch.svg
        ${FLATPAK_DEST}/share/icons/hicolor/scalable/apps/
      - rmdir --ignore-fail-on-non-empty ${FLATPAK_DEST}/share/pixmaps/
      - mkdir -p ${FLATPAK_DEST}/etc
      - >-
        sed s:@prefix@:${FLATPAK_DEST}:g retroarch.cfg >
        ${FLATPAK_DEST}/etc/retroarch.cfg
      - mkdir -p ${FLATPAK_DEST}/share/appdata
    modules:
      - rd-submodules/retroarch/modules/libpng/libpng-1.6.35.json
      - rd-submodules/retroarch/modules/nvidia-cg-toolkit/nvidia-cg-toolkit-3.1.0013.json
      - rd-submodules/shared-modules/SDL/SDL-1.2.15.json
      - rd-submodules/shared-modules/SDL/SDL_image-1.2.12.json
      - rd-submodules/shared-modules/SDL/SDL_mixer-1.2.12.json
      - rd-submodules/shared-modules/SDL/SDL_net-1.2.8.json
      - rd-submodules/shared-modules/SDL/SDL_ttf-2.0.11.json
      #- rd-submodules/shared-modules/libusb/libusb.json moved outside
      # certificate glu issue
      #- rd-submodules/shared-modules/gudev/gudev.json
      - rd-submodules/retroarch/modules/libbz2/libbz2-1.0.8.json
      - rd-submodules/retroarch/modules/xrandr/xrandr-1.5.1.json
      - rd-submodules/retroarch/modules/libaio/libaio-0.3.112.json
      # certificate issue, check libglu module for more info
      #- rd-submodules/shared-modules/glu/glu-9.json
      - rd-submodules/shared-modules/libdecor/libdecor-0.1.1.json
  - name: retroarch-filers-video
    subdir: gfx/video_filters
    make-install-args:
      - PREFIX=${FLATPAK_DEST}
    sources:
      - type: git
        url: https://github.com/libretro/RetroArch.git
        commit: 938ab716bd290b0f469068500966a834b5782929
  - name: retroarch-filers-audio
    subdir: libretro-common/audio/dsp_filters
    make-install-args:
      - PREFIX=${FLATPAK_DEST}
    sources:
      - type: git
        url: https://github.com/libretro/RetroArch.git
        commit: 938ab716bd290b0f469068500966a834b5782929
  - name: retroarch-assets
    make-install-args:
      - PREFIX=${FLATPAK_DEST}
    sources:
      - type: git
        url: https://github.com/libretro/retroarch-assets.git
        commit: 4ec80faf1b5439d1654f407805bb66141b880826
  - name: libretro-database
    make-install-args:
      - PREFIX=${FLATPAK_DEST}
    sources:
      - type: git
        url: https://github.com/libretro/libretro-database.git
        commit: 6a8d65d2bc1b7ffa7accb882e80c0a77b931bcc6
  - name: libretro-core-info
    make-install-args:
      - PREFIX=${FLATPAK_DEST}
    sources:
      - type: git
        url: https://github.com/libretro/libretro-core-info.git
        commit: eb7e3ff064c3fdaae46b89c9da9f49e15a8e9c2b
  - name: retroarch-joypad-autoconfig
    make-install-args:
      - PREFIX=${FLATPAK_DEST}
    sources:
      - type: git
        url: https://github.com/libretro/retroarch-joypad-autoconfig.git
        commit: 8ec6304a14bd37cf927ebe7555a274ac4fefeb69
  - name: common-shaders
    make-install-args:
      - PREFIX=${FLATPAK_DEST}
    sources:
      - type: git
        url: https://github.com/libretro/common-shaders.git
        commit: 86cfa146a8dfddf6377ddb5dbcff552feae2e5bf
  - name: slang-shaders
    make-install-args:
      - PREFIX=${FLATPAK_DEST}
    sources:
      - type: git
        url: https://github.com/libretro/slang-shaders.git
        commit: 8b35477a934739b1db193f22e7057754e7a87381
  - name: glsl-shaders
    make-install-args:
      - PREFIX=${FLATPAK_DEST}
    sources:
      - type: git
        url: https://github.com/libretro/glsl-shaders.git
        commit: 799aa9e4d567db0874111d2aed9c9b9058a19641
  - name: common-overlays
    make-install-args:
      - PREFIX=${FLATPAK_DEST}
    sources:
      - type: git
        url: https://github.com/libretro/common-overlays.git
        commit: b3827a2c63834ed9e1902acc7cf9019f64771ed3

  # RetroArch - END

  # Not part of the offical RetroArch manifest
  - name: retroarch-cores
    buildsystem: simple
    build-commands:
      - mkdir -p /app/share/libretro/cores/
      - mv ./RetroArch-Linux-x86_64.AppImage.home/.config/retroarch/cores/* /app/share/libretro/cores/
    sources:
      - type: archive
        url: https://buildbot.libretro.com/stable/1.15.0/linux/x86_64/RetroArch_cores.7z
        sha256: 2230bc38eaf87406efd0c2b7bdd1cf9e813ba113505600f14a7ef9eb06f8c7c0

  # PPSSPP - START
  # https://github.com/flathub/org.ppsspp.PPSSPP

  - name: ppsspp
    buildsystem: cmake-ninja
    config-opts:
      - -DUSE_SYSTEM_FFMPEG=OFF # default: off, turn this on?
      - -DUSE_SYSTEM_LIBZIP=ON
      - -DUSE_SYSTEM_ZSTD=ON

      - -DUSE_WAYLAND_WSI=ON
      #- -DUSING_X11_VULKAN=ON
      - -DUSING_QT_UI=OFF

      - -DBUILD_TESTING=OFF
      - -DOpenGL_GL_PREFERENCE=GLVND
    build-options:
      arch:
        aarch64:
          config-opts:
            - -DUSING_EGL=ON
            - -DUSING_GLES2=ON
    post-install:
      - install -Dm644 icons/icon-512.svg ${FLATPAK_DEST}/share/icons/hicolor/scalable/apps/ppsspp.svg
    cleanup:
      - /share/ppsspp/assets/lang/README.md
    sources:
      - type: git
        url: &ppsspp-url https://github.com/hrydgard/ppsspp.git
        tag: v1.14.4
        commit: cd535263c1ad65fd03869591a8bd706680cbf04b
        x-checker-data:
          type: git
          tag-pattern: ^v([\d.]+)$
          is-main-source: true

  - name: ppsspp-localization
    buildsystem: simple
    build-commands:
      - |
        for LANG_FILE in assets/lang/*.ini; do
          LANG_FILE_NAME="$(basename "$LANG_FILE")"
          LANG_PREFIX="${LANG_FILE_NAME:0:2}"
          LANG_DEST="$FLATPAK_DEST/share/locale/$LANG_PREFIX/ppsspp/$LANG_FILE_NAME";
          ln -fsr "$LANG_DEST" "$FLATPAK_DEST/share/ppsspp/$LANG_FILE"
          install -Dm644 "$LANG_FILE" "$LANG_DEST"
        done
    sources:
      - type: shell
        commands:
          - cp -a $FLATPAK_DEST/share/ppsspp/assets .

  # PPSSPP - END

  # Yuzu - START
  # https://github.com/yuzu-emu/yuzu-mainline/releases

  - name: Yuzu
    buildsystem: simple
    build-commands:
      - chmod +x yuzu*.AppImage
      - ./yuzu*.AppImage --appimage-extract
      - mkdir -p "${FLATPAK_DEST}/yuzu"
      - cp -r squashfs-root/* "${FLATPAK_DEST}/yuzu"
      - ln -s "${FLATPAK_DEST}/yuzu/usr/bin/yuzu" "${FLATPAK_DEST}/bin/yuzu"
    sources:
      - type: file
        url: https://github.com/yuzu-emu/yuzu-mainline/releases/download/mainline-0-1369/yuzu-mainline-20230312-54c359d1e.AppImage
        sha256: 219874f72ea09856c8f1349d7bf744ecbd2823a469bd29f036b386924f5c5a97

  # Yuzu - END

  # CITRA - START
  # https://github.com/flathub/org.citra_emu.citra

  - rd-submodules/shared-modules/SDL2/SDL2-with-libdecor.json

  - name: citra
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - '-DCMAKE_BUILD_TYPE=Release'
      - '-DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON'
      - '-DENABLE_LTO=ON'
      - '-DENABLE_QT_TRANSLATION=ON'
      - '-DCITRA_ENABLE_COMPATIBILITY_REPORTING=ON'
      - '-DENABLE_COMPATIBILITY_LIST_DOWNLOAD=OFF'
      # - '-DENABLE_FFMPEG_VIDEO_DUMPER=ON'
      # FFMPEG VIDEO DUMPER was disabled because of this: https://github.com/citra-emu/citra/issues/5949
      - '-DUSE_SYSTEM_SDL2=ON'
      - '-DCMAKE_POLICY_DEFAULT_CMP0069=NEW'
      - '-DENABLE_FDK=ON'
    cleanup:
      - /share/man
      - /share/pixmaps
    post-install:
      - install -Dm644 ../dist/citra.svg /app/share/icons/hicolor/scalable/apps/citra.svg
      - install -Dm644 ../dist/icon.png /app/share/icons/hicolor/512x512/apps/citra.png
    sources:
      - type: archive
        url: >-
          https://github.com/citra-emu/citra-nightly/releases/download/nightly-1854/citra-unified-source-20230312-2cbf6fb.tar.xz
        sha256: 018cb7dce3aa29a548a6e4cbad65d97babd98d2cdd1a4848a7c95c117f92fdf5
        x-checker-data:
          type: json
          url: https://api.github.com/repos/citra-emu/citra-nightly/releases/latest
          version-query: .tag_name
          url-query: >-
            .assets[] | .browser_download_url |
            match("https://.+citra-unified-source-.+.xz$") | .string
          is-main-source: true
      - type: patch
        path: rd-submodules/citra/unified-source-compat.patch

  # CITRA - END

  # PCSX2 - START
  # Inspired by:
  # https://github.com/flathub/com.zettlr.Zettlr/blob/master/com.zettlr.Zettlr.yaml
  # https://pcsx2.net/downloads/

  - name: pcsx2-qt
    buildsystem: simple
    build-commands:
      - chmod +x pcsx2*.AppImage
      - ./pcsx2*.AppImage --appimage-extract
      - mkdir -p "${FLATPAK_DEST}/pcsx2-qt"
      - cp -r squashfs-root/* "${FLATPAK_DEST}/pcsx2-qt"
      - ln -s "${FLATPAK_DEST}/pcsx2-qt/usr/bin/pcsx2-qt" "${FLATPAK_DEST}/bin/pcsx2-qt"
    sources:
      - type: file
        url: https://github.com/PCSX2/pcsx2/releases/download/v1.7.4225/pcsx2-v1.7.4225-linux-AppImage-64bit-Qt.AppImage
        sha256: e8ed326851941b212193c2bd193ca87efdcc70c18971f45749273a32893fec68

  # PCSX2 - END

  # Dolphin - START
  # https://github.com/flathub/org.DolphinEmu.dolphin-emu
  # WHEN UPADTING: remember to update rd-submodules/dolphin contents

  # needed for the emulate bluetooth adapter feature to work
  - name: bluez
    config-opts:
      - --enable-library
      - --disable-manpages
      - --disable-udev
      - --disable-tools
      - --disable-cups
      - --disable-monitor
      - --disable-client
      - --disable-systemd
      - --disable-a2dp
      - --disable-avrcp
      - --disable-network
      - --disable-obex
      - --disable-bap
      - --disable-mcp
      - --with-dbusconfdir=/app/etc
      - --with-dbussessionbusdir=/app/usr/lib/system-services
    sources:
      - type: archive
        url: https://www.kernel.org/pub/linux/bluetooth/bluez-5.66.tar.xz
        sha256: 39fea64b590c9492984a0c27a89fc203e1cdc74866086efb8f4698677ab2b574
        x-checker-data:
          type: anitya
          project-id: 10029
          stable-only: true
          url-template: https://www.kernel.org/pub/linux/bluetooth/bluez-$version.tar.xz

  # enables motion controls on non-wii controllers (switch, ps4, etc)
  # requires a udev rule enabling Motion Sensors access
  - name: libevdev
    buildsystem: meson
    config-opts:
      - -Dtests=disabled
      - -Ddocumentation=disabled
    sources:
      - type: archive
        url: https://www.freedesktop.org/software/libevdev/libevdev-1.13.0.tar.xz
        sha256: 9edf2006cc86a5055279647c38ec923d11a821ee4dc2c3033e8d20e8ee237cd9
        x-checker-data:
          type: anitya
          project-id: 20540
          stable-only: true
          url-template: https://www.freedesktop.org/software/libevdev/libevdev-$version.tar.xz

  # needed for screensaver inhibition
  - name: xdg-screensaver-shim
    buildsystem: meson
    sources:
      - type: archive
        url: https://github.com/Unrud/xdg-screensaver-shim/archive/0.0.2.tar.gz
        sha256: 0ed2a69fe6ee6cbffd2fe16f85116db737f17fb1e79bfb812d893cf15c728399

  - name: dolphin-emu
    buildsystem: cmake-ninja
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
      - -DENABLE_ALSA=OFF
      - -DENABLE_SDL=ON
      - -DENABLE_EVDEV=ON
      - -DDISTRIBUTOR=Flathub
    cleanup:
      - /share/man
    post-install:
      - install -D -t ${FLATPAK_DEST}/bin/ dolphin-emu-wrapper
      - sed -i -e 's/"2048"/"512"/g' /app/share/icons/hicolor/scalable/apps/dolphin-emu.svg
    sources:
      - type: git
        # Sometimes Dolphin or its submodules clone are failing in https so it must done in ssh
        # fatal: remote transport reported error
        # url: ssh://git@github.com/dolphin-emu/dolphin.git
        url: https://github.com/dolphin-emu/dolphin.git
        commit: 46b99671d9158e0ca840c1d8ef249db0f321ced7
        x-checker-data:
          type: json
          url: https://dolphin-emu.org/update/latest/beta
          commit-query: .hash
          version-query: .shortrev
          timestamp-query: .date
          is-main-source: true
      # detects whether dolphin is running in a flatpak sandbox
      # and makes it use xdg directories if it is.
      # prevents dolphin from attempting to write conf files
      # in non-writable paths, typically happens when a user
      # has leftover files from a previous non-flatpak install
      - type: patch
        path: rd-submodules/dolphin/detectflatpak.patch
      # version strings must match exactly for online multiplayer
      - type: patch
        path: rd-submodules/dolphin/nodirtyversion.patch
      - type: script
        commands:
          - |
            for i in {0..9}; do
              test -S $XDG_RUNTIME_DIR/discord-ipc-$i ||
                ln -sf {app/com.discordapp.Discord,$XDG_RUNTIME_DIR}/discord-ipc-$i;
            done
            dolphin-emu "$@"
        dest-filename: dolphin-emu-wrapper

  # Dolphin - END

  # XEMU - START
  # https://github.com/flathub/app.xemu.xemu

  # certificate issue, check libglu module for more info
  # - name: libglu
  #   buildsystem: meson
  #   cleanup:
  #     - /include
  #     - /lib/debug
  #     - /lib/pkgconfig
  #     - /lib/*.a
  #   sources:
  #     - type: archive
  #       url: http://mesa.freedesktop.org/archive/glu/glu-9.0.2.tar.xz
  #       sha256: 6e7280ff585c6a1d9dfcdf2fca489251634b3377bfc33c29e4002466a38d02d4
  #       x-checker-data:
  #         type: anitya
  #         project-id: 13518
  #         stable-only: true
  #         url-template: http://mesa.freedesktop.org/archive/glu/glu-$version.tar.xz

  - name: libpcap
    buildsystem: cmake-ninja
    cleanup:
      - /bin
      - /include
      - /lib/debug
      - /lib/pkgconfig
      - /lib/*.a
      - /share
    sources:
      - type: archive
        url: https://www.tcpdump.org/release/libpcap-1.10.3.tar.gz
        sha256: 2a8885c403516cf7b0933ed4b14d6caa30e02052489ebd414dc75ac52e7559e6
        x-checker-data:
          type: anitya
          project-id: 1702
          stable-only: true
          url-template: https://www.tcpdump.org/release/libpcap-$version.tar.gz

  - name: PyYAML
    buildsystem: simple
    build-commands:
      - python3 setup.py install --prefix=/app --root=/
    sources:
      - type: archive
        url: https://github.com/yaml/pyyaml/archive/refs/tags/6.0.tar.gz
        sha256: f33eaba25d8e0c1a959bbf00655198c287dfc5868f5b7b01e401eaa1796cc778

  - name: xemu
    buildsystem: autotools
    builddir: true
    no-make-install: true
    build-options:
      cflags: -O3 -DXBOX=1 -Wno-error=redundant-decls
    config-opts:
      - --audio-drv-list=sdl
      - --disable-werror
      - --target-list=i386-softmmu
    make-args:
      - qemu-system-i386
    post-install:
      - |-
        for px in 16 32 48 64 128 256 512; do
          install -Dm644 ../ui/icons/xemu_${px}x${px}.png $FLATPAK_DEST/share/icons/hicolor/${px}x${px}/apps/app.xemu.xemu.png
        done
      - install -Dm644 ../ui/icons/xemu.svg $FLATPAK_DEST/share/icons/hicolor/scalable/apps/app.xemu.xemu.svg
      - mv qemu-system-i386 $FLATPAK_DEST/bin/xemu
      - mkdir -p $FLATPAK_DEST/share/licenses/xemu
      - cd .. && python3 scripts/gen-license.py > $FLATPAK_DEST/share/licenses/xemu/LICENSE.txt
    sources:
      - type: git
        url: https://github.com/xemu-project/xemu.git
        tag: v0.7.85
        commit: 065c74a00fe402f65147e9b0d1a1eeac1b4b609f
        x-checker-data:
          type: json
          url: https://api.github.com/repos/xemu-project/xemu/releases/latest
          tag-query: .tag_name
          timestamp-query: .published_at
          version-query: .tag_name

  # XEMU - END

  # MELONDS - START
  # https://github.com/flathub/net.kuribo64.melonDS
  # ちっちゃい、かわいい！

  - name: libslirp
    buildsystem: meson
    sources:
      - type: git
        url: https://gitlab.freedesktop.org/slirp/libslirp.git
        tag: v4.7.0
  - name: melonds
    buildsystem: cmake-ninja
    builddir: true
    build-options:
      arch:
        aarch64:
          config-opts:
            - -DENABLE_LTO_RELEASE=OFF
    sources:
      - type: git
        url: https://github.com/melonDS-emu/melonDS.git
        commit: 430de6b2702bb93faa8c2004aff3fbd084db4a1e

  # MELONDS - END

  # RPCS3 - START
  # https://github.com/flathub/net.rpcs3.RPCS3

  # glu issue, check libglu module for more info
  #- rd-submodules/shared-modules/glu/glu-9.json
  - rd-submodules/shared-modules/glew/glew.json

  - name: rpcs3
    buildsystem: cmake-ninja
    builddir: true
    build-options:
      append-ld-library-path: /usr/lib/sdk/llvm14/lib
      append-path: /usr/lib/sdk/llvm14/bin
      cflags: &optflags -O2 -g -pipe -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong
        -grecord-gcc-switches -fasynchronous-unwind-tables -fstack-clash-protection
        -fcf-protection -fno-omit-frame-pointer
      cflags-override: true
      cxxflags: *optflags
      cxxflags-override: true
      env:
        AR: llvm-ar
        CC: clang
        CXX: clang++
        RANLIB: llvm-ranlib
      ldflags: -fuse-ld=lld
    config-opts:
      - -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - -DBUILD_LLVM_SUBMODULE=ON
      - -DUSE_NATIVE_INSTRUCTIONS=OFF
      - -DUSE_PRECOMPILED_HEADERS=OFF
      - -DUSE_SYSTEM_CURL=ON
      - -DUSE_SYSTEM_FFMPEG=ON
      - -DUSE_SYSTEM_LIBPNG=ON
      - -DUSE_SYSTEM_ZLIB=ON
      - -DITTAPI_SOURCE_DIR=/run/build/rpcs3/ittapi
      - -Wno-dev
    post-install:
      - |-
        set -eux

        COMM_TAG="$(awk -F'[\{,]' '/version{.*}/{printf "%d.%d.%d", $2, $3, $4}' ../rpcs3/rpcs3_version.cpp)"
        COMM_COUNT="$(git rev-list --count HEAD)";
        COMM_HASH="$(git rev-parse --short=8 HEAD)";
    sources:
      - type: git
        url: https://github.com/RPCS3/rpcs3.git
        commit: cf5346c263111760752cabb94767c07c501207c4
      - type: git
        url: https://github.com/intel/ittapi.git
        commit: 2de8a23f6130036dcd4d1b78d05df3187951d298
        dest: ittapi/ittapi
        disable-shallow-clone: true
      # remove git-lfs hook
      - type: inline
        dest: ittapi/ittapi/.git/hooks
        dest-filename: post-checkout
        contents:

  # RPCS3 - END

  # # PRIMEHACK - START
  # # https://github.com/flathub/io.github.shiiion.primehack
  # # Disabled because it's overwriting Dolphin

  - name: primehack
    buildsystem: cmake-ninja
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
      - -DENABLE_ALSA=OFF
      - -DENABLE_SDL=ON
      - -DENABLE_EVDEV=ON
      - -DDISTRIBUTOR=Flathub
    cleanup:
      - /share/man
    post-install:
      - install -D primehack-wrapper /app/bin/primehack-wrapper
    sources:
      - type: git
        url: https://github.com/TheDrifter363/primehack.git
        commit: 6295c695307a67f11ee202b05cbdd7b5c1edae5c
       # detects whether dolphin is running in a flatpak sandbox
       # and makes it use xdg directories if it is.
       # prevents dolphin from attempting to write conf files
       # in non-writable paths, typically happens when a user
       # has leftover files from a previous non-flatpak install
      - type: patch
        path: rd-submodules/dolphin/detectflatpak.patch
       # version strings must match exactly for online multiplayer
      - type: patch
        path: rd-submodules/dolphin/nodirtyversion.patch
      - type: script
        commands:
          - for i in {0..9}; do
          - test -S $XDG_RUNTIME_DIR/discord-ipc-$i || ln -sf {app/com.discordapp.Discord,$XDG_RUNTIME_DIR}/discord-ipc-$i;
          - done
          - primehack "$@"
        dest-filename: primehack-wrapper

  # # PRIMEHACK - END

  # # PRIMEHACK APPIMAGE START

  # Duckstation - START
  # https://github.com/flathub/org.duckstation.DuckStation
  # Disabled until we completely switch to QT6

  # - name: duckstation
  #   buildsystem: cmake-ninja
  #   no-make-install: true
  #   builddir: true
  #   config-opts:
  #     - -DCMAKE_BUILD_TYPE=RelWithDebInfo
  #     - -DUSE_EGL=ON
  #     - -DUSE_SDL2=ON
  #     - -DUSE_WAYLAND=ON
  #     - -DUSE_X11=ON
  #     - -DUSE_DRMKMS=ON
  #     - -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON
  #   post-install:
  #     - install -m755 bin/duckstation-qt /app/bin
  #     - cp -r ../data/* bin/translations /app/bin
  #   sources:
  #     - type: git
  #       url: https://github.com/stenzek/duckstation.git
  #       commit: 6f709468601183083b8581d4952aaba7baf77084
  #       # Cloning dep/msvc/qt is only necessary for Windows
  #       disable-submodules: true

  # Duckstation - END

  # Duckstation-DontUpdate - START
  # Old version moved to QT6 so it's either this or AppImage
  # But AppImage is a single one that keep getting updated at the same link so the sha (that's mandatory) will break the build
  # So yeah we're stuck with this for a while

  - name: duckstation-DontUpdate
    buildsystem: cmake-ninja
    no-make-install: true
    builddir: true
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
      - -DUSE_EGL=ON
      - -DUSE_SDL2=ON
      - -DUSE_WAYLAND=ON
      - -DUSE_X11=ON
      - -DUSE_DRMKMS=ON
      - -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON
    post-install:
      - install -m 755 -t /app/bin/ bin/duckstation-nogui bin/duckstation-qt
      - |-
        for px in 16 32 48 64 128 256; do
          install -Dm644 ../extras/icons/icon-${px}px.png /app/share/icons/hicolor/${px}x${px}/apps/org.duckstation.DuckStation.png
        done
      - cp -r ../data/* bin/translations /app/bin
    sources:
      - type: git
        url: https://github.com/stenzek/duckstation.git
        commit: 3fb61865e505ba639609fbf16cb8bdf5c66e020c

  # Duckstation-DontUpdate - END

  # Duckstation-AppImage - START
  # https://github.com/stenzek/duckstation/releases/tag/preview

  # - name: Duckstation-AppImage
  #   buildsystem: simple
  #   build-commands:
  #     - chmod +x DuckStation-*.AppImage
  #     - ./DuckStation-x64*.AppImage --appimage-extract
  #     - mkdir -p "${FLATPAK_DEST}/duckstation"
  #     - cp -r squashfs-root/* "${FLATPAK_DEST}/duckstation"
  #     - ln -s "${FLATPAK_DEST}/duckstation/usr/bin/duckstation" "${FLATPAK_DEST}/bin/duckstation"
  #   sources:
  #     - type: file
  #       url: https://github.com/stenzek/duckstation/releases/download/preview/DuckStation-x64.AppImage
  #       sha256: a107d1837df020cb4e7b8a542059665428883af69c1cf063edd29e2d75634867

  # Duckstation-AppImage - END

  # Cemu - START
  # https://github.com/cemu-project/Cemu/releases

  # Yes, this is old, do not update as we need libespol.so.1

  #- name: Cemu-binary
  #  buildsystem: simple
  #  build-commands:
  #    - mv Cemu ${FLATPAK_DEST}/bin/Cemu
  #    - chmod 777 ${FLATPAK_DEST}/bin/Cemu
  #    - mkdir -p ${FLATPAK_DEST}/config/cemu
  #    - mv gameProfiles ${FLATPAK_DEST}/config/cemu/gameProfiles
  #    - mv resources ${FLATPAK_DEST}/config/cemu/resources
  #    - mv shaderCache ${FLATPAK_DEST}/config/cemu/shaderCache
  #  sources:
  #    - type: archive
  #      url: https://github.com/cemu-project/Cemu/releases/download/v2.0-10/cemu-2.0-10-ubuntu-20.04-x64.zip
  #      sha256: b6cb5560e9a15be5991db4ca0ce1de70d233d094e388477b05d663a542dbbd5c

  # Cemu - END

  # Ryujinx - START
  # https://github.com/flathub/org.ryujinx.Ryujinx
  #
  # THIS MUST BE AT THE END OF THE MANIFEST OR THE BINARY WILL GET CORRUPTED
  #

  # - name: Ryujinx
  #   buildsystem: simple
  #   build-options:
  #     no-debuginfo: true
  #     no-debuginfo-compression: true
  #     strip: false
  #     arch:
  #       x86_64:
  #         env:
  #           RUNTIME: linux-x64
  #     env:
  #       PKG_CONFIG_PATH: /app/lib/pkgconfig:/app/share/pkgconfig:/usr/lib/pkgconfig:/usr/share/pkgconfig
  #       DOTNET_CLI_TELEMETRY_OPTOUT: 'true'
  #       DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 'true'
  #       RYUJINX_VERSION: 1.1.500
  #       RYUJINX_TARGET_RELEASE_CHANNEL_OWNER: flathub
  #       RYUJINX_TARGET_RELEASE_CHANNEL_REPO: org.ryujinx.Ryujinx
  #       RYUJINX_TARGET_RELEASE_CHANNEL_NAME: master
  #   build-commands:
  #   - |
  #     export PATH=$PATH:/run/build/Ryujinx/dotnet-sdk
  #     export RYUJINX_GIT_SHORT_HASH=$(git rev-parse --short HEAD)
  #     export RUNTIME_FRAMEWORK_VERSION=$(find nuget-sources -name 'microsoft.netcore.app.host.linux-x64.*' | grep -oP '(\d.\d.\d+.nupkg)' | grep -oP '(\d.\d.\d+)')
  #     sed -r --in-place "s/\%\%RYUJINX_BUILD_VERSION\%\%/$RYUJINX_VERSION/g;" Ryujinx.Common/ReleaseInformations.cs
  #     sed -r --in-place "s/\%\%RYUJINX_BUILD_GIT_HASH\%\%/$RYUJINX_GIT_SHORT_HASH/g;" Ryujinx.Common/ReleaseInformations.cs
  #     sed -r --in-place "s/\%\%RYUJINX_TARGET_RELEASE_CHANNEL_NAME\%\%/$RYUJINX_TARGET_RELEASE_CHANNEL_NAME/g;" Ryujinx.Common/ReleaseInformations.cs
  #     sed -r --in-place "s/\%\%RYUJINX_TARGET_RELEASE_CHANNEL_OWNER\%\%/$RYUJINX_TARGET_RELEASE_CHANNEL_OWNER/g;" Ryujinx.Common/ReleaseInformations.cs
  #     sed -r --in-place "s/\%\%RYUJINX_TARGET_RELEASE_CHANNEL_REPO\%\%/$RYUJINX_TARGET_RELEASE_CHANNEL_REPO/g;" Ryujinx.Common/ReleaseInformations.cs
  #     mkdir -p /app/bin
  #     dotnet publish -c Release -r $RUNTIME /p:DebugType=embedded Ryujinx /p:Version=$RYUJINX_VERSION /p:SourceRevisionId=$RYUJINX_GIT_SHORT_HASH /p:ExtraDefineConstants=DISABLE_UPDATER /p:RuntimeFrameworkVersion=$RUNTIME_FRAMEWORK_VERSION --self-contained --source nuget-sources
  #     if [ $? -ne 0 ]; then
  #         exit 1;
  #     fi;
  #     cp -r --remove-destination /run/build/Ryujinx/Ryujinx/bin/Release/net7.0/$RUNTIME/publish/* /app/bin/
  #     mkdir -p /app/lib/ffmpeg
  #     ln -s /usr/lib/x86_64-linux-gnu/libX11.so.6 /app/lib/libX11.so
  #     install -Dm755 ryujinx-wrapper /app/bin/ryujinx-wrapper
  #   sources:
  #     - type: git
  #       url: https://github.com/Ryujinx/Ryujinx.git
  #       commit: 2b23463daa01226c5569d8e61d1d0959570354cf
  #     - type: archive
  #       only-arches:
  #       - x86_64
  #       dest: dotnet-sdk
  #       url: https://dotnetcli.blob.core.windows.net/dotnet/Sdk/7.0.101/dotnet-sdk-7.0.101-linux-x64.tar.gz
  #       sha256: 454e2da3d02c74c2f6d2446c94fd9075f8db80ff6c9b9d41d5e470683e16a1d5
  #       x-checker-data:
  #         type: html
  #         url: https://dotnetcli.blob.core.windows.net/dotnet/Sdk/7.0/latest.version
  #         version-pattern: ^([\d\.a-z-]+)$
  #         url-template: https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$version/dotnet-sdk-$version-linux-x64.tar.gz
  #     - rd-submodules/ryujinx/nuget_sources.json
  #     - type: file
  #       path: rd-submodules/ryujinx/ryujinx-wrapper

  # Ryujinx - END

  # External manifests end

  - name: retrodeck
    buildsystem: simple
    build-commands:

      # Initializing retrodeck and emulationstation config folders
      - mkdir -p ${FLATPAK_DEST}/retrodeck
      - mkdir -p ${FLATPAK_DEST}/emulationstation

      # Prep the ES-DE and RetroArch config files - I will have to SED/XMLSTARLET them soon
      - rm -rf /app/share/emulationstation/resources/systems/unix/es_find_rules.xml
      - cp es-configs/es_find_rules.xml /app/share/emulationstation/resources/systems/unix/
      - rm -rf /app/share/emulationstation/resources/systems/unix/es_systems.xml
      - cp es-configs/es_systems.xml /app/share/emulationstation/resources/systems/unix/
      # These must be put in home folder, managed by retrodeck.sh
      - cp es-configs/es_settings.xml ${FLATPAK_DEST}/retrodeck/es_settings.xml

      # Logo, res, move graphics directory to mutable space so splash can be changed after build
      - mv -f -t ${FLATPAK_DEST}/emulationstation /app/share/emulationstation/resources/graphics
      - ln -s ${FLATPAK_DEST}/emulationstation/graphics /app/share/emulationstation/resources/graphics
      - cp -f res/extra-splashes/* ${FLATPAK_DEST}/emulationstation/graphics
      - cp -f res/splash.svg ${FLATPAK_DEST}/emulationstation/graphics/splash.svg
      - cp -f res/splash.svg ${FLATPAK_DEST}/emulationstation/graphics/splash-orig.svg
      - cp -f res/icon.svg /app/share/icons/hicolor/scalable/apps/net.retrodeck.retrodeck.svg

      # RetroDECK core script
      - cp retrodeck.sh /app/bin/retrodeck.sh
      - chmod +x /app/bin/retrodeck.sh

      # Tools
      - mkdir -p /app/tools
      - cp tools/configurator.sh /app/tools/configurator.sh
      - chmod +x /app/tools/configurator.sh
      - cp es-configs/tools-gamelist.xml /app/tools/gamelist.xml

      # Function libraries
      - mkdir -p /app/libexec
      - cp global.sh /app/libexec/global.sh
      - cp functions.sh /app/libexec/functions.sh
      - cp post_update.sh /app/libexec/post_update.sh

      # Desktop entry
      - cp net.retrodeck.retrodeck.desktop /app/share/applications/net.retrodeck.retrodeck.desktop

      # TODO: group the configs per-emu and optimize the following cps, like already done with Dolphin. Please not that some files may be renamed, check retrodeck.sh to know how (and fix it after the edit)

      # Initializing default emulator configs
      - cp -r emu-configs ${FLATPAK_DEST}/retrodeck/emu-configs/

      # Overlays
      #- cp -r overlays ${FLATPAK_DEST}/retrodeck/overlays Disabled in 0.4.2b as it will be introduced in 0.5.0b

      # Placing appdata
      - mkdir -p ${FLATPAK_DEST}/share/appdata
      - cp net.retrodeck.retrodeck.appdata.xml ${FLATPAK_DEST}/share/appdata

    sources:
      - type: git
        url: https://github.com/XargonWan/RetroDECK.git
        branch: main
